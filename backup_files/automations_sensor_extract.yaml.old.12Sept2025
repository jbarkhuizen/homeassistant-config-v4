- id: extract_sensors_daily
  alias: "Extract Sensors Daily Report"
  description: "Generate daily sensor extraction report at 09:00"
  trigger:
    - platform: time
      at: "09:00:00"
  condition: []
  action:
    - service: shell_command.extract_sensors
      data: {}
    - delay:
        seconds: 30
    - service: telegram_bot.send_message
      data:
        title: "📊 Sensor Report Generated"
        message: >
          Daily sensor extraction completed!
          
          📈 Report generated at: {{ now().strftime('%Y-%m-%d %H:%M:%S') }}
          📁 Location: /config/sensor_reports/
          
          Check your reports folder for detailed CSV, JSON, and summary files.

  # Daily Sensor Report Automation - Add to automations.yaml
# This automation will run daily at 09:00 and email you the sensor reports

- id: daily_sensor_report_09h00_final
  alias: "Daily Sensor Report at 09:00 - Final Version"
  description: "Generate and email daily sensor extraction report at 09:00 to jbarkhuizen@gmail.com"
  trigger:
    - platform: time
      at: "09:00:00"
  condition: []
  action:
    # Step 1: Generate the sensor report
    - service: shell_command.extract_sensors
      data: {}
    
    # Step 2: Wait for script to complete
    - delay:
        seconds: 45
    
    # Step 3: Send email notification with summary
    - service: notify.email_sensors
      data:
        title: "📊 Daily Home Assistant Sensor Report - {{ now().strftime('%Y-%m-%d') }}"
        message: |
          Daily Home Assistant Sensor Report
          Generated: {{ now().strftime('%Y-%m-%d at %H:%M:%S') }}
          
          🏠 Home Assistant Instance: 192.168.1.30:8123
          
          📊 SENSOR EXTRACTION COMPLETED ✅
          Full sensor report generated and saved to /config/sensor_reports/
          
          📁 Files Generated:
          • sensors_report_{{ now().strftime('%Y%m%d_090000') }}.csv
          • sensors_report_{{ now().strftime('%Y%m%d_090000') }}.json  
          • sensors_summary_{{ now().strftime('%Y%m%d_090000') }}.md
          
          🔍 INTEGRATION STATUS:
          • Deye/Sunsunk Inverters: {{ 'Online' if states('sensor.deyeinvertermaster_summary_battery_soc') not in ['unknown', 'unavailable'] else 'Check Required' }}
          • SONOFF Devices: Active
          • TUYA Devices: Active  
          • OneDrive Integration: {{ states('sensor.onedrive_drive_state') | default('N/A') | title }}
          • InfluxDB: Recording
          • Telegram: Active
          • Email Services: ✅ Operational
          
          ⚡ ENERGY MONITORING:
          • Master Battery SOC: {{ states('sensor.deyeinvertermaster_summary_battery_soc') | default('N/A') }}%
          • Slave Battery SOC: {{ states('sensor.deyeinverterslave_summary_battery_soc') | default('N/A') }}%
          • Daily Solar Generation: {{ states('sensor.deyeinvertermaster_summary_day_pv_generation') | default('N/A') }} kWh
          
          ☁️ ONEDRIVE STATUS:
          • Storage Used: {{ states('sensor.onedrive_used_storage') | default('N/A') }}GB
          • Storage Available: {{ states('sensor.onedrive_total_available_storage') | default('N/A') }}GB
          • Drive State: {{ states('sensor.onedrive_drive_state') | default('N/A') | title }}
          
          📈 SYSTEM HEALTH:
          • Processor Usage: {{ states('sensor.processor_use') | default('N/A') }}%
          • Memory Usage: {{ states('sensor.memory_use_percent') | default('N/A') }}%
          • System Uptime: {{ relative_time(states.sensor.last_boot.last_changed) if states('sensor.last_boot') != 'unavailable' else 'N/A' }}
          
          🔗 Access Reports:
          File Editor → /config/sensor_reports/
          
          This automated report monitors your dual Sunsunk inverters, SONOFF/TUYA devices, 
          OneDrive integration, and overall system health.
          
          Best regards,
          Home Assistant Sensor Report System
    
    # Step 4: Send Telegram confirmation  
    - service: telegram_bot.send_message
      data:
        title: "📊 Daily Sensor Report Sent"
        message: |
          Daily sensor report generated and emailed at {{ now().strftime('%H:%M:%S') }}
          
          📧 Email sent to: jbarkhuizen@gmail.com
          📁 Reports saved: /config/sensor_reports/
          ✅ Automation completed successfully    

- id: daily_sensor_report_simple
  alias: "Daily Sensor Report - Simple"
  trigger:
        - platform: time
          at: "09:00:00"
  action:
        - service: shell_command.extract_sensors
        - delay: 45
        - service: notify.email_ha
          data:
            title: "Daily HA Sensor Report - {{ now().strftime('%Y-%m-%d') }}"
            message: |
              Daily sensor report generated at {{ now().strftime('%H:%M:%S') }}
              Files saved to: /config/sensor_reports/
              System: 192.168.1.30:8123