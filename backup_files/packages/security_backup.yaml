#===============================================================================
# Security & Backup Management Package
# File: packages/security_backup.yaml
# Updated: 2025-09-11
# Purpose: Advanced security monitoring and automated backup management
#===============================================================================

# Security monitoring sensors
template:
  - sensor:
      # Failed login attempts
      - name: "Failed Login Attempts Today"
        unique_id: failed_login_attempts_today
        state: >
          {% set today = now().strftime('%Y-%m-%d') %}
          {% set failed_logins = states.persistent_notification 
             | selectattr('attributes.title', 'defined')
             | selectattr('attributes.title', 'search', 'Login attempt')
             | selectattr('attributes.created_at', 'defined')
             | selectattr('attributes.created_at', 'search', today)
             | list | count %}
          {{ failed_logins }}

      # Backup status summary
      - name: "Backup Status Summary"
        unique_id: backup_status_summary
        state: >
          {% set local_backup = states('sensor.backup_state') %}
          {% set cloud_backup = states('sensor.onedrive_drive_state') %}
          {% if local_backup == 'backing_up' or cloud_backup == 'uploading' %}
            In Progress
          {% elif local_backup == 'backed_up' and cloud_backup == 'idle' %}
            Complete
          {% else %}
            Check Required
          {% endif %}

  - binary_sensor:
      # Security threat detected
      - name: "Security Threat Detected"
        unique_id: security_threat_detected
        device_class: safety
        state: >
          {% set failed_logins = states('sensor.failed_login_attempts_today') | int(0) %}
          {{ failed_logins > 5 }}

      # Backup health status
      - name: "Backup Health Status"
        unique_id: backup_health_status
        device_class: problem
        state: >
          {% set local_backup = states('sensor.backup_state') %}
          {% set cloud_space = states('sensor.onedrive_remaining_storage') | int(0) %}
          {{ local_backup != 'idle' and cloud_space > 1000000000 }}

# Security & backup automations
automation:
  # Security threat response
  - id: security_threat_response
    alias: "Security Threat Response"
    description: "Respond to detected security threats"
    trigger:
      - platform: state
        entity_id: binary_sensor.security_threat_detected
        to: "on"
    action:
      - service: telegram_bot.send_message
        data:
          config_entry_id: 01K7PH2MD1SA9VXHCP39WVCJM4
          title: "üö® SECURITY ALERT"
          message: |
            Security threat detected!

            ‚ö†Ô∏è Multiple failed login attempts: {{ states('sensor.failed_login_attempts_today') }}
            üïí Alert time: {{ now().strftime('%H:%M:%S') }}
            üåê Check your router and firewall logs

            Consider enabling additional security measures.
      - service: notify.email_ha
        data:
          title: "üîí Security Alert - Multiple Failed Login Attempts"
          message: |
            SECURITY ALERT - Home Assistant Instance

            Multiple failed login attempts detected on your Home Assistant instance.

            THREAT DETAILS:
            ‚Ä¢ Failed attempts today: {{ states('sensor.failed_login_attempts_today') }}
            ‚Ä¢ System IP: 192.168.1.30:8123
            ‚Ä¢ Alert time: {{ now().strftime('%Y-%m-%d %H:%M:%S') }}

            RECOMMENDED ACTIONS:
            1. Review authentication logs
            2. Check for unfamiliar IP addresses
            3. Consider changing passwords
            4. Enable two-factor authentication if not already active
            5. Review firewall and router security settings

            SYSTEM STATUS:
            ‚Ä¢ Home Assistant Cloud: {{ 'Enabled' if is_state('binary_sensor.cloud_logged_in', 'on') else 'Disabled' }}
            ‚Ä¢ AdGuard Home: Active
            ‚Ä¢ Tailscale VPN: Connected

            This is an automated security alert.
            Alert generated: {{ now().strftime('%Y-%m-%d %H:%M:%S') }}

  # Daily backup verification
  - id: daily_backup_verification
    alias: "Daily Backup Verification"
    description: "Verify daily backup completion and health"
    trigger:
      - platform: time
        at: "10:00:00"
    action:
      - service: script.backup_health_check
      - delay:
          seconds: 30
      - choose:
          # Backup successful
          - conditions:
              - condition: state
                entity_id: binary_sensor.backup_health_status
                state: "on"
            sequence:
              - service: telegram_bot.send_message
                data:
                  config_entry_id: 01K7PH2MD1SA9VXHCP39WVCJM4
                  title: "‚úÖ Daily Backup Complete"
                  message: |
                    Daily backup verification successful!

                    üíæ Local backup: {{ states('sensor.backup_state') | title }}
                    ‚òÅÔ∏è Cloud backup: {{ states('sensor.onedrive_drive_state') | title }}
                    üìä Cloud space: {{ (states('sensor.onedrive_remaining_storage') | int(0) / 1000000000) | round(1) }}GB free

                    All backups are healthy.
        # Backup issues detected
        default:
          - service: notify.email_ha
            data:
              title: "‚ö†Ô∏è Backup Verification Issues Detected"
              message: |
                Daily backup verification has detected issues.

                BACKUP STATUS:
                ‚Ä¢ Local Backup: {{ states('sensor.backup_state') | title }}
                ‚Ä¢ Cloud Backup: {{ states('sensor.onedrive_drive_state') | title }}
                ‚Ä¢ Backup Health: {{ 'Good' if is_state('binary_sensor.backup_health_status', 'on') else 'Issues Detected' }}

                CLOUD STORAGE:
                ‚Ä¢ Total Storage: {{ (states('sensor.onedrive_total_available_storage') | int(0) / 1000000000) | round(1) }}GB
                ‚Ä¢ Used Storage: {{ (states('sensor.onedrive_used_storage') | int(0) / 1000000000) | round(1) }}GB
                ‚Ä¢ Remaining: {{ (states('sensor.onedrive_remaining_storage') | int(0) / 1000000000) | round(1) }}GB
                ‚Ä¢ Usage: {{ states('sensor.onedrive_storage_percentage_calculated') }}%

                RECOMMENDED ACTIONS:
                1. Check backup configurations
                2. Verify OneDrive connectivity
                3. Ensure sufficient cloud storage space
                4. Review backup logs for errors

                Verification time: {{ now().strftime('%Y-%m-%d %H:%M:%S') }}

  # Weekly security audit
  - id: weekly_security_audit
    alias: "Weekly Security Audit"
    description: "Comprehensive weekly security review"
    trigger:
      - platform: time
        at: "09:30:00"
    condition:
      - condition: time
        weekday:
          - sun
    action:
      - service: notify.email_ha
        data:
          title: "üîí Weekly Security Audit Report"
          message: |
            WEEKLY SECURITY AUDIT REPORT
            Audit Period: {{ (now() - timedelta(days=7)).strftime('%Y-%m-%d') }} to {{ now().strftime('%Y-%m-%d') }}

            üîê AUTHENTICATION SECURITY:
            ‚Ä¢ Failed login attempts this week: {{ states('sensor.failed_login_attempts_today') }}
            ‚Ä¢ Security threats detected: {{ 'Yes' if is_state('binary_sensor.security_threat_detected', 'on') else 'None' }}
            ‚Ä¢ Home Assistant Cloud: {{ 'Connected' if is_state('binary_sensor.cloud_logged_in', 'on') else 'Not Connected' }}

            üåê NETWORK SECURITY:
            ‚Ä¢ Current IP Address: {{ states('sensor.ipv4_address_eth0') }}
            ‚Ä¢ AdGuard Home: Active (DNS filtering enabled)
            ‚Ä¢ Tailscale VPN: Connected
            ‚Ä¢ Trusted Proxies: 192.168.1.0/24 subnet

            üíæ BACKUP SECURITY:
            ‚Ä¢ Local Backups: {{ states('sensor.backup_state') | title }}
            ‚Ä¢ Cloud Backups: {{ states('sensor.onedrive_drive_state') | title }}
            ‚Ä¢ Backup Health: {{ 'Good' if is_state('binary_sensor.backup_health_status', 'on') else 'Needs Attention' }}
            ‚Ä¢ OneDrive Storage: {{ states('sensor.onedrive_storage_percentage_calculated') }}% used

            üîß SYSTEM ACCESS:
            ‚Ä¢ SSH Access: Configured via Add-on
            ‚Ä¢ VS Code Server: Active (GitHub connected)
            ‚Ä¢ Node-RED: Active (password protected)
            ‚Ä¢ Grafana: Active (authentication enabled)

            üì± INTEGRATIONS SECURITY:
            ‚Ä¢ GitHub Integration: Active (read-only)
            ‚Ä¢ Telegram Bot: Active (encrypted)
            ‚Ä¢ Email Services: Active (TLS enabled)
            ‚Ä¢ MQTT Broker: Active (authentication enabled)

            ‚ö†Ô∏è SECURITY RECOMMENDATIONS:
            1. Regular password updates (quarterly)
            2. Monitor failed login attempts
            3. Keep Home Assistant updated
            4. Review integration permissions
            5. Maintain secure backup practices

            üìÖ NEXT SECURITY TASKS:
            ‚Ä¢ Next audit: {{ (now() + timedelta(days=7)).strftime('%Y-%m-%d') }}
            ‚Ä¢ Password review: Monthly
            ‚Ä¢ Security update check: Weekly

            Audit completed: {{ now().strftime('%Y-%m-%d %H:%M:%S') }}

# Scripts for security and backup management
script:
  backup_health_check:
    alias: "Backup Health Check"
    sequence:
      - service: homeassistant.update_entity
        target:
          entity_id:
            - sensor.backup_status_summary
            - binary_sensor.backup_health_status
            - sensor.onedrive_remaining_storage

  emergency_backup:
    alias: "Emergency Backup"
    sequence:
      - service: hassio.backup_full
        data:
          name: "Emergency_Backup_{{ now().strftime('%Y%m%d_%H%M%S') }}"
      - service: script.force_onedrive_sync
      - service: telegram_bot.send_message
        data:
          config_entry_id: 01K7PH2MD1SA9VXHCP39WVCJM4
          title: "üíæ Emergency Backup Initiated"
          message: "Emergency backup has been started. This may take several minutes to complete."

  security_lockdown:
    alias: "Security Lockdown"
    sequence:
      - service: input_boolean.turn_on
        entity_id: input_boolean.maintenance_mode
      - service: telegram_bot.send_message
        data:
          config_entry_id: 01K7PH2MD1SA9VXHCP39WVCJM4
          title: "üîí Security Lockdown Activated"
          message: |
            Security lockdown has been activated.

            üö´ Non-essential automations disabled
            üîê System in maintenance mode
            üìß Admin notifications enabled

            Review security logs and take appropriate action.
